{
	"info": {
		"_postman_id": "81c15459-7269-4df3-bb94-a7c914b2c64b",
		"name": "TodoApp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "todos",
			"item": [
				{
					"name": "GET /todos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0175c3d8-a255-451e-8579-df18ca99f2a4",
								"exec": [
									"if(!data.errors){",
									"    let todos_ = JSON.parse(responseBody);",
									"    pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"    ",
									"    if(todos_.length){",
									"        let lastTodo_ = todos_[todos_.length - 1];",
									"        pm.environment.set(\"todoId_\", lastTodo_._id);",
									"        pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"        pm.environment.set(\"taskIds_\", lastTodo_.tasks.map(task => task._id));",
									"        pm.environment.set(\"tasks_\", JSON.stringify(lastTodo_.tasks));",
									"        ",
									"        if(lastTodo_.tasks.length){",
									"            pm.environment.set(\"taskId_\", lastTodo_.tasks[lastTodo_.tasks.length - 1]._id);",
									"        } else {",
									"            pm.environment.set(\"taskId_\", \"\");",
									"        }",
									"    } else {",
									"        pm.environment.set(\"todoId_\", \"\");",
									"        pm.environment.set(\"taskId_\", \"\");",
									"        pm.environment.set(\"todoIds_\", []);",
									"        pm.environment.set(\"taskIds_\", []);",
									"        pm.environment.set(\"tasks_\", []);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/{{todos}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}"
							]
						},
						"description": "Get all todos"
					},
					"response": []
				},
				{
					"name": "POST /todos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3753ef8-4f64-430f-a5da-b08e98d4c615",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let lastTodo_ = JSON.parse(responseBody);",
									"    ",
									"todos_.push(lastTodo_)",
									"",
									"if(!data.errors){",
									"    pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"    pm.environment.set(\"todoId_\", lastTodo_._id);",
									"    pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"    pm.environment.set(\"taskIds_\", lastTodo_.tasks.map(task => task._id));",
									"    pm.environment.set(\"tasks_\", JSON.stringify(lastTodo_.tasks));",
									"    ",
									"    ",
									"    if(lastTodo_.tasks.length){",
									"        pm.environment.set(\"taskId_\", lastTodo_.tasks[lastTodo_.tasks.length - 1]._id);",
									"    } else {",
									"        pm.environment.set(\"taskId_\", \"\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"My great title\",\n\t\"names\": \"book1\",\n\t\"tasks\": [\n\t]\n}"
						},
						"url": {
							"raw": "{{url}}/{{todos}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}"
							]
						},
						"description": "Create a TODO"
					},
					"response": []
				},
				{
					"name": "GET /todos/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5cbe0f9-19c6-4e9d-94c2-93efe42d579e",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let currentTodo_ = JSON.parse(responseBody);",
									"",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodo_._id);",
									"    if(todoIndex >= 0){",
									"        todos_[todoIndex] = currentTodo_;",
									"    } else {",
									"        todos_.push(currentTodo_);",
									"    }",
									"    ",
									"    pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"    pm.environment.set(\"todoId_\", currentTodo_._id);",
									"    pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"    pm.environment.set(\"taskIds_\", currentTodo_.tasks.map(task => task._id));",
									"    ",
									"    let lastTodo_ = currentTodo_;",
									"    ",
									"    pm.environment.set(\"tasks_\", JSON.stringify(lastTodo_.tasks));",
									"    if(lastTodo_.tasks.length){",
									"        pm.environment.set(\"taskId_\", lastTodo_.tasks[lastTodo_.tasks.length - 1]._id);",
									"    } else {",
									"        pm.environment.set(\"taskId_\", \"\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}"
							]
						},
						"description": "Get a specific todo"
					},
					"response": []
				},
				{
					"name": "DELETE /todos/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33f2311f-359a-4807-90bd-520c9449b37b",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let currentTodo_ = JSON.parse(responseBody);",
									"",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodo_._id);",
									"    if(todoIndex >= 0){",
									"        todos_.splice(todoIndex, 1);",
									"    }",
									"",
									"    pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"    ",
									"    if(todos_.length){",
									"        let newCurrentTodo = todos_[todos_.length - 1];",
									"",
									"        pm.environment.set(\"todoId_\", newCurrentTodo._id);",
									"        pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"        pm.environment.set(\"taskIds_\", newCurrentTodo.tasks.map(task => task._id));",
									"        ",
									"        let lastTodo_ = newCurrentTodo;",
									"        ",
									"        pm.environment.set(\"tasks_\", JSON.stringify(lastTodo_.tasks));",
									"        if(lastTodo_.tasks.length){",
									"            pm.environment.set(\"taskId_\", lastTodo_.tasks[lastTodo_.tasks.length - 1]._id);",
									"        } else {",
									"            pm.environment.set(\"taskId_\", \"\");",
									"        }",
									"    } else {",
									"        pm.environment.set(\"todoId_\", \"\");",
									"        pm.environment.set(\"taskId_\", \"\");",
									"        pm.environment.set(\"todoIds_\", []);",
									"        pm.environment.set(\"taskIds_\", []);",
									"        pm.environment.set(\"tasks_\", []);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /todos/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73e526e2-db47-4daf-9bf7-33fbe6e69611",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let currentTodo_ = JSON.parse(responseBody);",
									"",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodo_._id);",
									"    if(todoIndex >= 0){",
									"        todos_[todoIndex] = currentTodo_;",
									"    } else {",
									"        todos_.push(currentTodo_);",
									"    }",
									"    ",
									"    pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"    pm.environment.set(\"todoId_\", currentTodo_._id);",
									"    pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"    pm.environment.set(\"taskIds_\", currentTodo_.tasks.map(task => task._id));",
									"    ",
									"    let lastTodo_ = currentTodo_;",
									"    ",
									"    pm.environment.set(\"tasks_\", JSON.stringify(lastTodo_.tasks));",
									"    if(lastTodo_.tasks.length){",
									"        pm.environment.set(\"taskId_\", lastTodo_.tasks[lastTodo_.tasks.length - 1]._id);",
									"    } else {",
									"        pm.environment.set(\"taskId_\", \"\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"My first todo list - renamfffeds!!!?\"\n}"
						},
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}"
							]
						},
						"description": "Update TODO info"
					},
					"response": []
				},
				{
					"name": "GET /todos/:todoId/tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6233374-67fc-41bb-9bb8-6e507ca0190b",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let currentTaskList = JSON.parse(responseBody);",
									"let currentTodoId = pm.environment.get(\"todoId_\");",
									"",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodoId);",
									"    if(todoIndex >= 0){",
									"        let currentTodo_ = todos_[todoIndex];",
									"        ",
									"        currentTodo_.tasks = currentTaskList;",
									"    ",
									"        pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"        pm.environment.set(\"todoId_\", currentTodo_._id);",
									"        pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"        pm.environment.set(\"taskIds_\", currentTodo_.tasks.map(task => task._id));",
									"        ",
									"        let lastTodo_ = currentTodo_;",
									"    ",
									"        pm.environment.set(\"tasks_\", JSON.stringify(lastTodo_.tasks));",
									"        if(lastTodo_.tasks.length){",
									"            pm.environment.set(\"taskId_\", lastTodo_.tasks[lastTodo_.tasks.length - 1]._id);",
									"        } else {",
									"            pm.environment.set(\"taskId_\", \"\");",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}/{{tasks}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}",
								"{{tasks}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /todos/:todoId/tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9017afe5-4c0d-4fea-b40c-f43bb4c55284",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let lastTask = JSON.parse(responseBody);",
									"",
									"let currentTodoId = pm.environment.get(\"todoId_\");",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodoId);",
									"    if(todoIndex >= 0){",
									"        let lastTodo_ = todos_[todoIndex];",
									"        ",
									"        lastTodo_.tasks.push(lastTask);",
									"        ",
									"        pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"        pm.environment.set(\"todoId_\", lastTodo_._id);",
									"        pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"        pm.environment.set(\"taskIds_\", lastTodo_.tasks.map(task => task._id));   ",
									"        pm.environment.set(\"tasks_\", JSON.stringify(lastTodo_.tasks));",
									"",
									"        if(lastTodo_.tasks.length){",
									"            pm.environment.set(\"taskId_\", lastTodo_.tasks[lastTodo_.tasks.length - 1]._id);",
									"        } else {",
									"            pm.environment.set(\"taskId_\", \"\");",
									"        }",
									"        ",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"description\": \"3332222This is my modified tasks39993\",\n\t\t\"completed\": false\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}/{{tasks}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}",
								"{{tasks}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /todos/:todoId/tasks/:taskId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29aa950b-de39-4e71-b9da-d1d00299eb9d",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let currentTask_ = JSON.parse(responseBody);",
									"let currentTodoId = pm.environment.get(\"todoId_\");",
									"let currentTaskId = pm.environment.get(\"taskId_\");",
									"",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodoId);",
									"    if(todoIndex >= 0){",
									"        let currentTodo_ = todos_[todoIndex];",
									"        ",
									"        let taskIndex = currentTodo_.tasks.findIndex(task => task._id === currentTaskId);",
									"        if(taskIndex >= 0){",
									"            currentTodo_.tasks[taskIndex] = currentTask_;",
									"",
									"            pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"            pm.environment.set(\"todoId_\", currentTodo_._id);",
									"            pm.environment.set(\"taskId_\", currentTaskId);",
									"            pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"            pm.environment.set(\"taskIds_\", currentTodo_.tasks.map(task => task._id));",
									"            pm.environment.set(\"tasks_\", JSON.stringify(currentTodo_.tasks));",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}/{{tasks}}/{{taskId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}",
								"{{tasks}}",
								"{{taskId_}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /todo/:todoId/task/:taskId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/todo/{{todoId}}/task/5d0e8e9d9de27c0021c5818a",
									"host": [
										"{{url}}"
									],
									"path": [
										"todo",
										"{{todoId}}",
										"task",
										"5d0e8e9d9de27c0021c5818a"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "691"
								},
								{
									"key": "ETag",
									"value": "W/\"2b3-IF91weIMTN/L9gR0Thfr+aDqtJ0\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Jun 2019 21:25:40 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"5d0e8e9d9de27c0021c58186\",\n    \"tasks\": [\n        {\n            \"description\": \"This is my first task\",\n            \"completed\": false,\n            \"_id\": \"5d0e8e9d9de27c0021c5818a\"\n        },\n        {\n            \"description\": \"This is my second task\",\n            \"completed\": false,\n            \"_id\": \"5d0e8e9d9de27c0021c58189\"\n        },\n        {\n            \"description\": \"This is my third task\",\n            \"completed\": false,\n            \"_id\": \"5d0e8e9d9de27c0021c58188\"\n        },\n        {\n            \"description\": \"This is my Fourth task\",\n            \"completed\": true,\n            \"_id\": \"5d0e8e9d9de27c0021c58187\"\n        },\n        {\n            \"description\": \"This is my modified tasks\",\n            \"completed\": true,\n            \"_id\": \"5d0e92ed27253100ef0972bd\"\n        },\n        {\n            \"description\": \"This is my modified tasks\",\n            \"completed\": true,\n            \"_id\": \"5d0e92ee27253100ef0972be\"\n        },\n        {\n            \"description\": \"This is my modified tasks\",\n            \"completed\": true,\n            \"_id\": \"5d0e93d634ceea01091ff5aa\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DELETE /todos/:todoId/tasks/:taskId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92ab1192-faf3-47c4-9caf-d65e06015bc8",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let currentTodoId = pm.environment.get(\"todoId_\");",
									"let currentTaskId = pm.environment.get(\"taskId_\");",
									"",
									"",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodoId);",
									"    if(todoIndex >= 0){",
									"        let currentTodo_ = todos_[todoIndex];",
									"        ",
									"        let taskIndex = currentTodo_.tasks.findIndex(task => task._id === currentTaskId);",
									"        if(taskIndex >= 0){",
									"            currentTodo_.tasks.splice(taskIndex, 1);",
									"        }",
									"        ",
									"        pm.environment.set(\"todoId_\", currentTodoId);",
									"        pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"        pm.environment.set(\"taskIds_\", currentTodo_.tasks.map(task => task._id));",
									"        pm.environment.set(\"tasks_\", JSON.stringify(currentTodo_.tasks));",
									"        ",
									"        if(!currentTodo_.tasks.length){",
									"            pm.environment.set(\"taskId_\", []);   ",
									"        } else {",
									"            pm.environment.set(\"taskId_\", currentTodo_.tasks[currentTodo_.tasks.length - 1]._id);",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}/{{tasks}}/{{taskId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}",
								"{{tasks}}",
								"{{taskId_}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /todos/:todoId/tasks/:taskId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "774d6604-abe4-4a69-afe8-250e264cfcd2",
								"exec": [
									"let todos_ = JSON.parse(pm.environment.get(\"todos_\"));",
									"let currentTask_ = JSON.parse(responseBody);",
									"let currentTodoId = pm.environment.get(\"todoId_\");",
									"let currentTaskId = pm.environment.get(\"taskId_\");",
									"",
									"if(!data.errors){",
									"    let todoIndex = todos_.findIndex(todo => todo._id === currentTodoId);",
									"    if(todoIndex >= 0){",
									"        let currentTodo_ = todos_[todoIndex];",
									"        ",
									"        let taskIndex = currentTodo_.tasks.findIndex(task => task._id === currentTaskId);",
									"        if(taskIndex >= 0){",
									"            currentTodo_.tasks[taskIndex] = currentTask_;",
									"",
									"            pm.environment.set(\"todos_\", JSON.stringify(todos_));",
									"            pm.environment.set(\"todoId_\", currentTodo_._id);",
									"            pm.environment.set(\"taskId_\", currentTaskId);",
									"            pm.environment.set(\"todoIds_\", todos_.map(todo => todo._id));",
									"            pm.environment.set(\"taskIds_\", currentTodo_.tasks.map(task => task._id));",
									"            pm.environment.set(\"tasks_\", JSON.stringify(currentTodo_.tasks));",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"completed\": true\n}"
						},
						"url": {
							"raw": "{{url}}/{{todos}}/{{todoId_}}/{{tasks}}/{{taskId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{todos}}",
								"{{todoId_}}",
								"{{tasks}}",
								"{{taskId_}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "GET /users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2d099df-c8e5-496d-9c2a-df93b36dca4e",
								"exec": [
									"if(!data.errors){",
									"    let users = JSON.parse(responseBody);",
									"    ",
									"    pm.environment.set(\"users\", JSON.stringify(users));",
									"    ",
									"    if(users.length && (pm.environment.get(\"userId_\") === null || !pm.environment.get(\"userId_\").trim().length)){",
									"        let lastUser = users[users.length - 1];",
									"        ",
									"        pm.environment.set(\"userId_\", lastUser._id);",
									"        for(let i = 0; i < users.length; i++){",
									"            if(users[i]._id === lastUser._id){",
									"                pm.environment.set(\"user\", JSON.stringify(users[i]));",
									"            }",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{login_jwttoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/{{usersUrl}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25428141-b6b0-4b53-88a7-f00ed2153b8c",
								"exec": [
									"if(!data.errors){",
									"    let userData = JSON.parse(responseBody);",
									"    let usersData = JSON.parse(pm.environment.get(\"users\"));",
									"    let requestData = JSON.parse(request.data);",
									"    ",
									"    userData.password = requestData.password;",
									"    usersData.push(userData);",
									"    ",
									"    pm.environment.set(\"users\", JSON.stringify(usersData));",
									"    pm.environment.set(\"userId_\", userData._id);",
									"    pm.environment.set(\"user\", JSON.stringify(userData));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Russel\",\n\t\"lastName\": \"Gaultier\",\n\t\"email\": \"gauthier.russel@gmail.com\",\n\t\"password\": \"aR1#Jekld@3dkd@\"\n}"
						},
						"url": {
							"raw": "{{url}}/{{usersUrl}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /users 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25428141-b6b0-4b53-88a7-f00ed2153b8c",
								"exec": [
									"if(!data.errors){",
									"    let userData = JSON.parse(responseBody);",
									"    let usersData = JSON.parse(pm.environment.get(\"users\"));",
									"    let requestData = JSON.parse(request.data);",
									"    ",
									"    userData.password = requestData.password;",
									"    usersData.push(userData);",
									"    ",
									"    pm.environment.set(\"users\", JSON.stringify(usersData));",
									"    pm.environment.set(\"userId_\", userData._id);",
									"    pm.environment.set(\"user\", JSON.stringify(userData));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Zac\",\n\t\"lastName\": \"Gauthier\",\n\t\"email\": \"gauthier.zac@gmail.com\",\n\t\"password\": \"aR1#Jekld@3dkd@\"\n}"
						},
						"url": {
							"raw": "{{url}}/{{usersUrl}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /users 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25428141-b6b0-4b53-88a7-f00ed2153b8c",
								"exec": [
									"if(!data.errors){",
									"    let userData = JSON.parse(responseBody);",
									"    let usersData = JSON.parse(pm.environment.get(\"users\"));",
									"    let requestData = JSON.parse(request.data);",
									"    ",
									"    userData.password = requestData.password;",
									"    usersData.push(userData);",
									"    ",
									"    pm.environment.set(\"users\", JSON.stringify(usersData));",
									"    pm.environment.set(\"userId_\", userData._id);",
									"    pm.environment.set(\"user\", JSON.stringify(userData));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Zacarías\",\n\t\"lastName\": \"Gutiérrez\",\n\t\"email\": \"gutierrez.zacarias@gmail.com\",\n\t\"password\": \"J:KLDewriou432dfs,\"\n}"
						},
						"url": {
							"raw": "{{url}}/{{usersUrl}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /users/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f45d62c2-b124-4ff8-b174-a5a4fe0f38db",
								"exec": [
									"if(!data.errors){",
									"    let login_results = JSON.parse(responseBody);",
									"    pm.environment.set(\"login_results\", JSON.stringify(login_results));",
									"    pm.environment.set(\"login_jwttoken\", login_results.token);",
									"    pm.environment.set(\"login_exp\", JSON.stringify(login_results.exp));",
									"    ",
									"    let id_ = login_results._id;",
									"    ",
									"    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"password\": \"aR1#Jekld@3dkd@\", \"email\": \"gauthier.russel@gmail.com\"}\n"
						},
						"url": {
							"raw": "{{url}}/{{usersUrl}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /me",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb6839f8-f4e8-458e-828c-b37c8a736a22",
								"exec": [
									"if(!data.errors){",
									"    let data = JSON.parse(responseBody);",
									"    let userData = data.user;",
									"",
									"    pm.environment.set(\"userId_\", userData._id);",
									"    pm.environment.set(\"user\", JSON.stringify(userData));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{login_jwttoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/{{usersUrl}}/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /users/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dede6e41-bf60-447b-acbc-6e7abe402fac",
								"exec": [
									"if(!data.errors){",
									"    let users = JSON.parse(pm.environment.get(\"users\"));",
									"    let user = JSON.parse(responseBody);",
									"",
									"    let userFound = false;",
									"    for(let i = 0; i < users.length && !userFound; i++){",
									"        if(users[i]._id === user._id){",
									"            userFound = true;",
									"        }",
									"    }",
									"    ",
									"    if(!userFound){",
									"        users.push(user);",
									"    }",
									"    ",
									"    pm.environment.set(\"userId_\", user._id);",
									"    pm.environment.set(\"user\", JSON.stringify(user));",
									"    pm.environment.set(\"users\", JSON.stringify(users));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{login_jwttoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/{{usersUrl}}/{{userId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}",
								"{{userId_}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /users/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91b66e55-93d5-4585-bcda-956a5b9586de",
								"exec": [
									"if(!data.errors){",
									"    let users = JSON.parse(pm.environment.get(\"users\"));",
									"    let user = JSON.parse(responseBody);",
									"",
									"",
									"    let usersNew = users.filter(user => user._id !== pm.environment.get(\"userId_\"));",
									"    let currentUser = usersNew[0];",
									"",
									"    ",
									"    pm.environment.set(\"userId_\", currentUser._id);",
									"    pm.environment.set(\"user\", JSON.stringify(currentUser));",
									"    pm.environment.set(\"users\", JSON.stringify(usersNew));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{login_jwttoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/{{usersUrl}}/{{userId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}",
								"{{userId_}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /users/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4215649-22e0-473b-a7e9-12cb97f6b82a",
								"exec": [
									"if(!data.errors){",
									"    let users = JSON.parse(pm.environment.get(\"users\"));",
									"    let user = JSON.parse(responseBody);",
									"",
									"    let newUsers = users.map(currUser => {",
									"        if(currUser._id === pm.environment.get(\"userId_\")){",
									"            pm.environment.set(\"user\", JSON.stringify(user));",
									"            ",
									"            return user;",
									"        } else {",
									"            return currUser;",
									"        }",
									"    });",
									"    ",
									"    pm.environment.set(\"users\", JSON.stringify(newUsers));",
									"    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{login_jwttoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"lastName\": \"LaSallio\"\n}"
						},
						"url": {
							"raw": "{{url}}/{{usersUrl}}/{{userId_}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{usersUrl}}",
								"{{userId_}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"id": "02e278b8-a5ee-40d7-865c-8e0253ed5910",
			"key": "url",
			"value": "localhost:4001",
			"type": "string"
		},
		{
			"id": "06a47752-5314-41ff-8f52-04908c57c83c",
			"key": "todo",
			"value": "todo",
			"type": "string"
		}
	]
}