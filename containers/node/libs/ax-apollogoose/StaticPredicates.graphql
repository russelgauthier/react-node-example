#
# Mongo Predicate Input types: MongoStringPredicate, Mongo*Predicate
# Operators: https://docs.mongodb.com/manual/reference/operator/query/ and implement for all applicable types
#
input MongoBooleanPredicate {
    eq: Boolean
    ne: Boolean
    not: MongoBooleanPredicate
}
input MongoBooleanArrayPredicate {
    all: [Boolean]
    eq: Boolean
    eq_: [Boolean]
    ne: Boolean
    ne_: [Boolean]
    not: MongoBooleanArrayPredicate
}
input MongoBufferPredicate {
    eq: Buffer #Checks value
    eq_: Buffer #Checks binary value
    ne: Buffer #Checks value
    ne_: Buffer #Checks binary value
    not: MongoBufferPredicate #Check value
    not_: MongoBufferPredicate #Check binary value
}
input MongoBufferArrayPredicate {
    all:[String]
    eq:String
    eq_:[String]
    in:[String]
    ne_:[String]
    ne:String
    nin:[String]
    not: MongoBufferArrayPredicate
}
input MongoDatePredicate {
    eq: Date
    gt: Date
    gte: Date
    lt: Date
    lte: Date
    ne: Date
    in: [Date]
    nin: [Date]
    not: MongoDatePredicate
}
input MongoDateArrayPredicate {
    all: [Date]
    eq: Date
    eq_: [Date]
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    ne_: [Date]
    nin: [Date]
    not: MongoDateArrayPredicate
}
input MongoDecimal128Predicate {
    eq: Decimal128
    gt: Decimal128
    gte: Decimal128
    lt: Decimal128
    lte: Decimal128
    ne: Decimal128
    in: [Decimal128]
    nin: [Decimal128]
    not: MongoDecimal128Predicate
}
input MongoDecimal128ArrayPredicate {
    all: [Decimal128]
    eq: Decimal128
    eq_: [Decimal128]
    gt: Decimal128
    gte: Decimal128
    in: [Decimal128]
    lt: Decimal128
    lte: Decimal128
    ne: Decimal128
    ne_: [Decimal128]
    nin: [Decimal128]
    not: MongoDecimal128ArrayPredicate
}
input MongoInt32Predicate {
    eq: Int32
    gt: Int32
    gte: Int32
    lt: Int32
    lte: Int32
    ne: Int32
    in: [Int32]
    nin: [Int32]
    not: MongoInt32Predicate
}
input MongoInt32ArrayPredicate {
    all: [Int32]
    eq: Int32
    eq_: [Int32]
    gt: Int32
    gte: Int32
    in: [Int32]
    lt: Int32
    lte: Int32
    ne: Int32
    ne_: [Int32]
    nin: [Int32]
    not: MongoInt32ArrayPredicate
}
input MongoLongPredicate {
    eq: Long
    gt: Long
    gte: Long
    lt: Long
    lte: Long
    ne: Long
    in: [Long]
    nin: [Long]
    not: MongoLongPredicate
}
input MongoLongArrayPredicate {
    all: [Long]
    eq: Long
    eq_: [Long]
    gt: Long
    gte: Long
    in: [Long]
    lt: Long
    lte: Long
    ne: Long
    ne_: [Long]
    nin: [Long]
    not: MongoLongArrayPredicate
}
input MongoNumberPredicate {
    eq: Float
    gt: Float
    gte: Float
    lt: Float
    lte: Float
    ne: Float
    in: [Float]
    nin: [Float]
    not: MongoNumberPredicate
}
input MongoNumberArrayPredicate {
    all: [Float]
    eq: Float
    eq_: [Float]
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    ne_: [Float]
    nin: [Float]
    not: MongoNumberArrayPredicate
}
input MongoObjectIDPredicate {
    eq: ID
    ne: ID
    in: [ID]
    nin: [ID]
    not: MongoObjectIDPredicate
}
input MongoObjectIDArrayPredicate {
    all: [ID]
    eq: ID
    eq_: [ID]
    ne: ID
    ne_: [ID]
    in: [ID]
    nin: [ID]
    not: MongoObjectIDArrayPredicate
}
input MongoStringPredicate {
    eq: String
    gt: String
    gte: String
    lt: String
    lte: String
    ne: String
    in: [String]
    nin: [String]
    not: MongoStringPredicate
    regex: String
}
input MongoStringArrayPredicate {
    all: [String]
    eq: String
    eq_: [String]
    gt: String
    gte: String
    in: [String]
    lt: String
    lte: String
    ne: String
    ne_: [String]
    nin: [String]
    not: MongoStringArrayPredicate
    regex: String
}